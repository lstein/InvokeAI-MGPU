{
    "accessibility": {
        "about": "About",
        "createIssue": "Create Issue",
        "submitSupportTicket": "Submit Support Ticket",
        "invokeProgressBar": "Invoke progress bar",
        "menu": "Menu",
        "mode": "Mode",
        "nextImage": "Next Image",
        "previousImage": "Previous Image",
        "reset": "Reset",
        "resetUI": "$t(accessibility.reset) UI",
        "showGalleryPanel": "Show Gallery Panel",
        "showOptionsPanel": "Show Side Panel",
        "uploadImage": "Upload Image",
        "loadMore": "Load More"
    },
    "boards": {
        "addBoard": "Add Board",
        "addPrivateBoard": "Add Private Board",
        "addSharedBoard": "Add Shared Board",
        "archiveBoard": "Archive Board",
        "archived": "Archived",
        "autoAddBoard": "Auto-Add Board",
        "boards": "Boards",
        "selectedForAutoAdd": "Selected for Auto-Add",
        "bottomMessage": "Deleting this board and its images will reset any features currently using them.",
        "cancel": "Cancel",
        "changeBoard": "Change Board",
        "clearSearch": "Clear Search",
        "deleteBoard": "Delete Board",
        "deleteBoardAndImages": "Delete Board and Images",
        "deleteBoardOnly": "Delete Board Only",
        "deletedBoardsCannotbeRestored": "Deleted boards cannot be restored. Selecting 'Delete Board Only' will move images to an uncategorized state.",
        "deletedPrivateBoardsCannotbeRestored": "Deleted boards cannot be restored. Selecting 'Delete Board Only' will move images to a private uncategorized state for the image's creator.",
        "hideBoards": "Hide Boards",
        "loading": "Loading...",
        "menuItemAutoAdd": "Auto-add to this Board",
        "move": "Move",
        "movingImagesToBoard_one": "Moving {{count}} image to board:",
        "movingImagesToBoard_other": "Moving {{count}} images to board:",
        "myBoard": "My Board",
        "noBoards": "No {{boardType}} Boards",
        "noMatching": "No matching Boards",
        "private": "Private Boards",
        "searchBoard": "Search Boards...",
        "selectBoard": "Select a Board",
        "shared": "Shared Boards",
        "topMessage": "This board contains images used in the following features:",
        "unarchiveBoard": "Unarchive Board",
        "uncategorized": "Uncategorized",
        "viewBoards": "View Boards",
        "downloadBoard": "Download Board",
        "imagesWithCount_one": "{{count}} image",
        "imagesWithCount_other": "{{count}} images",
        "assetsWithCount_one": "{{count}} asset",
        "assetsWithCount_other": "{{count}} assets"
    },
    "accordions": {
        "generation": {
            "title": "Generation"
        },
        "image": {
            "title": "Image"
        },
        "advanced": {
            "title": "Advanced",
            "options": "$t(accordions.advanced.title) Options"
        },
        "control": {
            "title": "Control"
        },
        "compositing": {
            "title": "Compositing",
            "coherenceTab": "Coherence Pass",
            "infillTab": "Infill"
        }
    },
    "common": {
        "aboutDesc": "Using Invoke for work? Check out:",
        "aboutHeading": "Own Your Creative Power",
        "accept": "Accept",
        "add": "Add",
        "advanced": "Advanced",
        "ai": "ai",
        "areYouSure": "Are you sure?",
        "auto": "Auto",
        "back": "Back",
        "batch": "Batch Manager",
        "beta": "Beta",
        "cancel": "Cancel",
        "copy": "Copy",
        "copyError": "$t(gallery.copy) Error",
        "on": "On",
        "or": "or",
        "checkpoint": "Checkpoint",
        "communityLabel": "Community",
        "controlNet": "ControlNet",
        "data": "Data",
        "delete": "Delete",
        "details": "Details",
        "direction": "Direction",
        "ipAdapter": "IP Adapter",
        "t2iAdapter": "T2I Adapter",
        "positivePrompt": "Positive Prompt",
        "negativePrompt": "Negative Prompt",
        "discordLabel": "Discord",
        "dontAskMeAgain": "Don't ask me again",
        "dontShowMeThese": "Don't show me these",
        "editor": "Editor",
        "error": "Error",
        "file": "File",
        "folder": "Folder",
        "format": "format",
        "githubLabel": "Github",
        "goTo": "Go to",
        "hotkeysLabel": "Hotkeys",
        "imageFailedToLoad": "Unable to Load Image",
        "img2img": "Image To Image",
        "inpaint": "inpaint",
        "input": "Input",
        "installed": "Installed",
        "languagePickerLabel": "Language",
        "linear": "Linear",
        "load": "Load",
        "loading": "Loading",
        "localSystem": "Local System",
        "loglevel": "Log Level",
        "learnMore": "Learn More",
        "modelManager": "Model Manager",
        "nodeEditor": "Node Editor",
        "nodes": "Workflows",
        "notInstalled": "Not $t(common.installed)",
        "openInNewTab": "Open in New Tab",
        "orderBy": "Order By",
        "outpaint": "outpaint",
        "outputs": "Outputs",
        "postprocessing": "Post Processing",
        "random": "Random",
        "reportBugLabel": "Report Bug",
        "safetensors": "Safetensors",
        "save": "Save",
        "saveAs": "Save As",
        "settingsLabel": "Settings",
        "simple": "Simple",
        "somethingWentWrong": "Something went wrong",
        "statusDisconnected": "Disconnected",
        "template": "Template",
        "toResolve": "To resolve",
        "txt2img": "Text To Image",
        "unifiedCanvas": "Unified Canvas",
        "unknown": "Unknown",
        "upload": "Upload",
        "updated": "Updated",
        "created": "Created",
        "prevPage": "Previous Page",
        "nextPage": "Next Page",
        "unknownError": "Unknown Error",
        "red": "Red",
        "green": "Green",
        "blue": "Blue",
        "alpha": "Alpha",
        "selected": "Selected",
        "tab": "Tab",
        "viewing": "Viewing",
        "viewingDesc": "Review images in a large gallery view",
        "editing": "Editing",
        "editingDesc": "Edit on the Control Layers canvas",
        "comparing": "Comparing",
        "comparingDesc": "Comparing two images",
        "enabled": "Enabled",
        "disabled": "Disabled"
    },
    "controlnet": {
        "controlAdapter_one": "Control Adapter",
        "controlAdapter_other": "Control Adapters",
        "controlnet": "$t(controlnet.controlAdapter_one) #{{number}} ($t(common.controlNet))",
        "ip_adapter": "$t(controlnet.controlAdapter_one) #{{number}} ($t(common.ipAdapter))",
        "t2i_adapter": "$t(controlnet.controlAdapter_one) #{{number}} ($t(common.t2iAdapter))",
        "addControlNet": "Add $t(common.controlNet)",
        "addIPAdapter": "Add $t(common.ipAdapter)",
        "addT2IAdapter": "Add $t(common.t2iAdapter)",
        "amult": "a_mult",
        "autoConfigure": "Auto configure processor",
        "balanced": "Balanced",
        "base": "Base",
        "beginEndStepPercent": "Begin / End Step Percentage",
        "beginEndStepPercentShort": "Begin/End %",
        "bgth": "bg_th",
        "canny": "Canny",
        "cannyDescription": "Canny edge detection",
        "colorMap": "Color",
        "colorMapDescription": "Generates a color map from the image",
        "coarse": "Coarse",
        "contentShuffle": "Content Shuffle",
        "contentShuffleDescription": "Shuffles the content in an image",
        "control": "Control",
        "controlMode": "Control Mode",
        "crop": "Crop",
        "delete": "Delete",
        "depthAnything": "Depth Anything",
        "depthAnythingDescription": "Depth map generation using the Depth Anything technique",
        "depthMidas": "Depth (Midas)",
        "depthMidasDescription": "Depth map generation using Midas",
        "depthZoe": "Depth (Zoe)",
        "depthZoeDescription": "Depth map generation using Zoe",
        "detectResolution": "Detect Resolution",
        "duplicate": "Duplicate",
        "f": "F",
        "fill": "Fill",
        "h": "H",
        "face": "Face",
        "body": "Body",
        "hands": "Hands",
        "hed": "HED",
        "hedDescription": "Holistically-Nested Edge Detection",
        "hideAdvanced": "Hide Advanced",
        "highThreshold": "High Threshold",
        "imageResolution": "Image Resolution",
        "colorMapTileSize": "Tile Size",
        "importImageFromCanvas": "Import Image From Canvas",
        "importMaskFromCanvas": "Import Mask From Canvas",
        "large": "Large",
        "lineart": "Lineart",
        "lineartAnime": "Lineart Anime",
        "lineartAnimeDescription": "Anime-style lineart processing",
        "lineartDescription": "Converts image to lineart",
        "lowThreshold": "Low Threshold",
        "maxFaces": "Max Faces",
        "mediapipeFace": "Mediapipe Face",
        "mediapipeFaceDescription": "Face detection using Mediapipe",
        "megaControl": "Mega Control",
        "minConfidence": "Min Confidence",
        "mlsd": "M-LSD",
        "mlsdDescription": "Minimalist Line Segment Detector",
        "modelSize": "Model Size",
        "none": "None",
        "noneDescription": "No processing applied",
        "normalBae": "Normal BAE",
        "normalBaeDescription": "Normal BAE processing",
        "dwOpenpose": "DW Openpose",
        "dwOpenposeDescription": "Human pose estimation using DW Openpose",
        "pidi": "PIDI",
        "pidiDescription": "PIDI image processing",
        "processor": "Processor",
        "prompt": "Prompt",
        "resetControlImage": "Reset Control Image",
        "resize": "Resize",
        "resizeSimple": "Resize (Simple)",
        "resizeMode": "Resize Mode",
        "ipAdapterMethod": "Method",
        "full": "Full",
        "style": "Style Only",
        "composition": "Composition Only",
        "safe": "Safe",
        "saveControlImage": "Save Control Image",
        "scribble": "Scribble",
        "selectModel": "Select a model",
        "selectCLIPVisionModel": "Select a CLIP Vision model",
        "setControlImageDimensions": "Copy size to W/H (optimize for model)",
        "setControlImageDimensionsForce": "Copy size to W/H (ignore model)",
        "showAdvanced": "Show Advanced",
        "small": "Small",
        "toggleControlNet": "Toggle this ControlNet",
        "w": "W",
        "weight": "Weight"
    },
    "hrf": {
        "hrf": "High Resolution Fix",
        "enableHrf": "Enable High Resolution Fix",
        "upscaleMethod": "Upscale Method",
        "metadata": {
            "enabled": "High Resolution Fix Enabled",
            "strength": "High Resolution Fix Strength",
            "method": "High Resolution Fix Method"
        }
    },
    "prompt": {
        "addPromptTrigger": "Add Prompt Trigger",
        "compatibleEmbeddings": "Compatible Embeddings",
        "noMatchingTriggers": "No matching triggers"
    },
    "queue": {
        "queue": "Queue",
        "queueFront": "Add to Front of Queue",
        "queueBack": "Add to Queue",
        "queueEmpty": "Queue Empty",
        "enqueueing": "Queueing Batch",
        "resume": "Resume",
        "resumeTooltip": "Resume Processor",
        "resumeSucceeded": "Processor Resumed",
        "resumeFailed": "Problem Resuming Processor",
        "pause": "Pause",
        "pauseTooltip": "Pause Processor",
        "pauseSucceeded": "Processor Paused",
        "pauseFailed": "Problem Pausing Processor",
        "cancel": "Cancel",
        "cancelTooltip": "Cancel Current Item",
        "cancelSucceeded": "Item Canceled",
        "cancelFailed": "Problem Canceling Item",
        "prune": "Prune",
        "pruneTooltip": "Prune {{item_count}} Completed Items",
        "pruneSucceeded": "Pruned {{item_count}} Completed Items from Queue",
        "pruneFailed": "Problem Pruning Queue",
        "clear": "Clear",
        "clearTooltip": "Cancel and Clear All Items",
        "clearSucceeded": "Queue Cleared",
        "clearFailed": "Problem Clearing Queue",
        "cancelBatch": "Cancel Batch",
        "cancelItem": "Cancel Item",
        "cancelBatchSucceeded": "Batch Canceled",
        "cancelBatchFailed": "Problem Canceling Batch",
        "clearQueueAlertDialog": "Clearing the queue immediately cancels any processing items and clears the queue entirely.",
        "clearQueueAlertDialog2": "Are you sure you want to clear the queue?",
        "current": "Current",
        "next": "Next",
        "status": "Status",
        "total": "Total",
        "time": "Time",
        "pending": "Pending",
        "in_progress": "In Progress",
        "completed": "Completed",
        "failed": "Failed",
        "canceled": "Canceled",
        "completedIn": "Completed in",
        "batch": "Batch",
        "batchFieldValues": "Batch Field Values",
        "item": "Item",
        "session": "Session",
        "notReady": "Unable to Queue",
        "batchQueued": "Batch Queued",
        "batchQueuedDesc_one": "Added {{count}} sessions to {{direction}} of queue",
        "batchQueuedDesc_other": "Added {{count}} sessions to {{direction}} of queue",
        "front": "front",
        "back": "back",
        "batchFailedToQueue": "Failed to Queue Batch",
        "graphQueued": "Graph queued",
        "graphFailedToQueue": "Failed to queue graph",
        "openQueue": "Open Queue",
        "prompts_one": "Prompt",
        "prompts_other": "Prompts",
        "iterations_one": "Iteration",
        "iterations_other": "Iterations",
        "generations_one": "Generation",
        "generations_other": "Generations"
    },
    "invocationCache": {
        "invocationCache": "Invocation Cache",
        "cacheSize": "Cache Size",
        "maxCacheSize": "Max Cache Size",
        "hits": "Cache Hits",
        "misses": "Cache Misses",
        "clear": "Clear",
        "clearSucceeded": "Invocation Cache Cleared",
        "clearFailed": "Problem Clearing Invocation Cache",
        "enable": "Enable",
        "enableSucceeded": "Invocation Cache Enabled",
        "enableFailed": "Problem Enabling Invocation Cache",
        "disable": "Disable",
        "disableSucceeded": "Invocation Cache Disabled",
        "disableFailed": "Problem Disabling Invocation Cache",
        "useCache": "Use Cache"
    },
    "gallery": {
        "alwaysShowImageSizeBadge": "Always Show Image Size Badge",
        "assets": "Assets",
        "autoAssignBoardOnClick": "Auto-Assign Board on Click",
        "autoSwitchNewImages": "Auto-Switch to New Images",
        "copy": "Copy",
        "currentlyInUse": "This image is currently in use in the following features:",
        "drop": "Drop",
        "dropOrUpload": "$t(gallery.drop) or Upload",
        "dropToUpload": "$t(gallery.drop) to Upload",
        "deleteImage_one": "Delete Image",
        "deleteImage_other": "Delete {{count}} Images",
        "deleteImageBin": "Deleted images will be sent to your operating system's Bin.",
        "deleteImagePermanent": "Deleted images cannot be restored.",
        "displayBoardSearch": "Display Board Search",
        "displaySearch": "Display Search",
        "download": "Download",
        "exitBoardSearch": "Exit Board Search",
        "exitSearch": "Exit Search",
        "featuresWillReset": "If you delete this image, those features will immediately be reset.",
        "galleryImageSize": "Image Size",
        "gallerySettings": "Gallery Settings",
        "go": "Go",
        "image": "image",
        "jump": "Jump",
        "loading": "Loading",
        "loadMore": "Load More",
        "newestFirst": "Newest First",
        "oldestFirst": "Oldest First",
        "sortDirection": "Sort Direction",
        "showStarredImagesFirst": "Show Starred Images First",
        "noImageSelected": "No Image Selected",
        "noImagesInGallery": "No Images to Display",
        "setCurrentImage": "Set as Current Image",
        "starImage": "Star Image",
        "unstarImage": "Unstar Image",
        "unableToLoad": "Unable to load Gallery",
        "deleteSelection": "Delete Selection",
        "downloadSelection": "Download Selection",
        "bulkDownloadRequested": "Preparing Download",
        "bulkDownloadRequestedDesc": "Your download request is being prepared. This may take a few moments.",
        "bulkDownloadRequestFailed": "Problem Preparing Download",
        "bulkDownloadFailed": "Download Failed",
        "problemDeletingImages": "Problem Deleting Images",
        "problemDeletingImagesDesc": "One or more images could not be deleted",
        "viewerImage": "Viewer Image",
        "compareImage": "Compare Image",
        "openInViewer": "Open in Viewer",
        "searchImages": "Search by Metadata",
        "selectAllOnPage": "Select All On Page",
        "selectAllOnBoard": "Select All On Board",
        "showArchivedBoards": "Show Archived Boards",
        "selectForCompare": "Select for Compare",
        "selectAnImageToCompare": "Select an Image to Compare",
        "slider": "Slider",
        "sideBySide": "Side-by-Side",
        "hover": "Hover",
        "swapImages": "Swap Images",
        "compareOptions": "Comparison Options",
        "stretchToFit": "Stretch to Fit",
        "exitCompare": "Exit Compare",
        "compareHelp1": "Hold <Kbd>Alt</Kbd> while clicking a gallery image or using the arrow keys to change the compare image.",
        "compareHelp2": "Press <Kbd>M</Kbd> to cycle through comparison modes.",
        "compareHelp3": "Press <Kbd>C</Kbd> to swap the compared images.",
        "compareHelp4": "Press <Kbd>Z</Kbd> or <Kbd>Esc</Kbd> to exit."
    },
    "hotkeys": {
        "searchHotkeys": "Search Hotkeys",
        "clearSearch": "Clear Search",
        "noHotkeysFound": "No Hotkeys Found",
        "acceptStagingImage": {
            "desc": "Accept Current Staging Area Image",
            "title": "Accept Staging Image"
        },
        "addNodes": {
            "desc": "Opens the add node menu",
            "title": "Add Nodes"
        },
        "appHotkeys": "App",
        "cancel": {
            "desc": "Cancel current queue item",
            "title": "Cancel"
        },
        "cancelAndClear": {
            "desc": "Cancel current queue item and clear all pending items",
            "title": "Cancel and Clear"
        },
        "changeTabs": {
            "desc": "Switch to another workspace",
            "title": "Change Tabs"
        },
        "clearMask": {
            "desc": "Clear the entire mask",
            "title": "Clear Mask"
        },
        "closePanels": {
            "desc": "Closes open panels",
            "title": "Close Panels"
        },
        "colorPicker": {
            "desc": "Selects the canvas color picker",
            "title": "Select Color Picker"
        },
        "consoleToggle": {
            "desc": "Open and close console",
            "title": "Console Toggle"
        },
        "copyToClipboard": {
            "desc": "Copy current canvas to clipboard",
            "title": "Copy to Clipboard"
        },
        "decreaseBrushOpacity": {
            "desc": "Decreases the opacity of the canvas brush",
            "title": "Decrease Brush Opacity"
        },
        "decreaseBrushSize": {
            "desc": "Decreases the size of the canvas brush/eraser",
            "title": "Decrease Brush Size"
        },
        "decreaseGalleryThumbSize": {
            "desc": "Decreases gallery thumbnails size",
            "title": "Decrease Gallery Image Size"
        },
        "deleteImage": {
            "desc": "Delete the current image",
            "title": "Delete Image"
        },
        "downloadImage": {
            "desc": "Download current canvas",
            "title": "Download Image"
        },
        "eraseBoundingBox": {
            "desc": "Erases the bounding box area",
            "title": "Erase Bounding Box"
        },
        "fillBoundingBox": {
            "desc": "Fills the bounding box with brush color",
            "title": "Fill Bounding Box"
        },
        "focusPrompt": {
            "desc": "Focus the prompt input area",
            "title": "Focus Prompt"
        },
        "galleryHotkeys": "Gallery",
        "generalHotkeys": "General",
        "hideMask": {
            "desc": "Hide and unhide mask",
            "title": "Hide Mask"
        },
        "increaseBrushOpacity": {
            "desc": "Increases the opacity of the canvas brush",
            "title": "Increase Brush Opacity"
        },
        "increaseBrushSize": {
            "desc": "Increases the size of the canvas brush/eraser",
            "title": "Increase Brush Size"
        },
        "increaseGalleryThumbSize": {
            "desc": "Increases gallery thumbnails size",
            "title": "Increase Gallery Image Size"
        },
        "invoke": {
            "desc": "Generate an image",
            "title": "Invoke"
        },
        "keyboardShortcuts": "Hotkeys",
        "maximizeWorkSpace": {
            "desc": "Close panels and maximize work area",
            "title": "Maximize Workspace"
        },
        "mergeVisible": {
            "desc": "Merge all visible layers of canvas",
            "title": "Merge Visible"
        },
        "moveTool": {
            "desc": "Allows canvas navigation",
            "title": "Move Tool"
        },
        "nextImage": {
            "desc": "Display the next image in gallery",
            "title": "Next Image"
        },
        "nextStagingImage": {
            "desc": "Next Staging Area Image",
            "title": "Next Staging Image"
        },
        "nodesHotkeys": "Nodes",
        "pinOptions": {
            "desc": "Pin the options panel",
            "title": "Pin Options"
        },
        "previousImage": {
            "desc": "Display the previous image in gallery",
            "title": "Previous Image"
        },
        "previousStagingImage": {
            "desc": "Previous Staging Area Image",
            "title": "Previous Staging Image"
        },
        "quickToggleMove": {
            "desc": "Temporarily toggles Move mode",
            "title": "Quick Toggle Move"
        },
        "redoStroke": {
            "desc": "Redo a brush stroke",
            "title": "Redo Stroke"
        },
        "resetView": {
            "desc": "Reset Canvas View",
            "title": "Reset View"
        },
        "restoreFaces": {
            "desc": "Restore the current image",
            "title": "Restore Faces"
        },
        "saveToGallery": {
            "desc": "Save current canvas to gallery",
            "title": "Save To Gallery"
        },
        "selectBrush": {
            "desc": "Selects the canvas brush",
            "title": "Select Brush"
        },
        "selectEraser": {
            "desc": "Selects the canvas eraser",
            "title": "Select Eraser"
        },
        "sendToImageToImage": {
            "desc": "Send current image to Image to Image",
            "title": "Send To Image To Image"
        },
        "remixImage": {
            "desc": "Use all parameters except seed from the current image",
            "title": "Remix image"
        },
        "setParameters": {
            "desc": "Use all parameters of the current image",
            "title": "Set Parameters"
        },
        "setPrompt": {
            "desc": "Use the prompt of the current image",
            "title": "Set Prompt"
        },
        "setSeed": {
            "desc": "Use the seed of the current image",
            "title": "Set Seed"
        },
        "showHideBoundingBox": {
            "desc": "Toggle visibility of bounding box",
            "title": "Show/Hide Bounding Box"
        },
        "showInfo": {
            "desc": "Show metadata info of the current image",
            "title": "Show Info"
        },
        "toggleGallery": {
            "desc": "Open and close the gallery drawer",
            "title": "Toggle Gallery"
        },
        "toggleOptions": {
            "desc": "Open and close the options panel",
            "title": "Toggle Options"
        },
        "toggleOptionsAndGallery": {
            "desc": "Open and close the options and gallery panels",
            "title": "Toggle Options and Gallery"
        },
        "resetOptionsAndGallery": {
            "desc": "Resets the options and gallery panels",
            "title": "Reset Options and Gallery"
        },
        "toggleLayer": {
            "desc": "Toggles mask/base layer selection",
            "title": "Toggle Layer"
        },
        "toggleSnap": {
            "desc": "Toggles Snap to Grid",
            "title": "Toggle Snap"
        },
        "undoStroke": {
            "desc": "Undo a brush stroke",
            "title": "Undo Stroke"
        },
        "unifiedCanvasHotkeys": "Unified Canvas",
        "postProcess": {
            "desc": "Process the current image using the selected post-processing model",
            "title": "Process Image"
        },
        "toggleViewer": {
            "desc": "Switches between the Image Viewer and workspace for the current tab.",
            "title": "Toggle Image Viewer"
        }
    },
    "metadata": {
        "allPrompts": "All Prompts",
        "cfgScale": "CFG scale",
        "cfgRescaleMultiplier": "$t(parameters.cfgRescaleMultiplier)",
        "createdBy": "Created By",
        "fit": "Image to image fit",
        "generationMode": "Generation Mode",
        "height": "Height",
        "imageDetails": "Image Details",
        "imageDimensions": "Image Dimensions",
        "initImage": "Initial image",
        "metadata": "Metadata",
        "model": "Model",
        "negativePrompt": "Negative Prompt",
        "noImageDetails": "No image details found",
        "noMetaData": "No metadata found",
        "noRecallParameters": "No parameters to recall found",
        "parameterSet": "Parameter {{parameter}} set",
        "parsingFailed": "Parsing Failed",
        "positivePrompt": "Positive Prompt",
        "recallParameters": "Recall Parameters",
        "recallParameter": "Recall {{label}}",
        "scheduler": "Scheduler",
        "seamless": "Seamless",
        "seed": "Seed",
        "steps": "Steps",
        "strength": "Image to image strength",
        "Threshold": "Noise Threshold",
        "vae": "VAE",
        "width": "Width",
        "workflow": "Workflow"
    },
    "modelManager": {
        "active": "active",
        "addModel": "Add Model",
        "addModels": "Add Models",
        "advanced": "Advanced",
        "allModels": "All Models",
        "alpha": "Alpha",
        "availableModels": "Available Models",
        "baseModel": "Base Model",
        "cancel": "Cancel",
        "config": "Config",
        "convert": "Convert",
        "convertingModelBegin": "Converting Model. Please wait.",
        "convertToDiffusers": "Convert To Diffusers",
        "convertToDiffusersHelpText1": "This model will be converted to the \ud83e\udde8 Diffusers format.",
        "convertToDiffusersHelpText2": "This process will replace your Model Manager entry with the Diffusers version of the same model.",
        "convertToDiffusersHelpText3": "Your checkpoint file on disk WILL be deleted if it is in InvokeAI root folder. If it is in a custom location, then it WILL NOT be deleted.",
        "convertToDiffusersHelpText4": "This is a one time process only. It might take around 30s-60s depending on the specifications of your computer.",
        "convertToDiffusersHelpText5": "Please make sure you have enough disk space. Models generally vary between 2GB-7GB in size.",
        "convertToDiffusersHelpText6": "Do you wish to convert this model?",
        "defaultSettings": "Default Settings",
        "defaultSettingsSaved": "Default Settings Saved",
        "delete": "Delete",
        "deleteConfig": "Delete Config",
        "deleteModel": "Delete Model",
        "deleteModelImage": "Delete Model Image",
        "deleteMsg1": "Are you sure you want to delete this model from InvokeAI?",
        "deleteMsg2": "This WILL delete the model from disk if it is in the InvokeAI root folder. If you are using a custom location, then the model WILL NOT be deleted from disk.",
        "description": "Description",
        "edit": "Edit",
        "height": "Height",
        "huggingFace": "HuggingFace",
        "huggingFacePlaceholder": "owner/model-name",
        "huggingFaceRepoID": "HuggingFace Repo ID",
        "huggingFaceHelper": "If multiple models are found in this repo, you will be prompted to select one to install.",
        "hfToken": "HuggingFace Token",
        "hfTokenHelperText": "A HF token is required to use checkpoint models. Click here to create or get your token.",
        "hfTokenInvalid": "Invalid or Missing HF Token",
        "hfTokenInvalidErrorMessage": "Invalid or missing HuggingFace token.",
        "hfTokenInvalidErrorMessage2": "Update it in the ",
        "hfTokenUnableToVerify": "Unable to Verify HF Token",
        "hfTokenUnableToVerifyErrorMessage": "Unable to verify HuggingFace token. This is likely due to a network error. Please try again later.",
        "hfTokenSaved": "HF Token Saved",
        "imageEncoderModelId": "Image Encoder Model ID",
        "installQueue": "Install Queue",
        "inplaceInstall": "In-place install",
        "inplaceInstallDesc": "Install models without copying the files. When using the model, it will be loaded from its this location. If disabled, the model file(s) will be copied into the Invoke-managed models directory during installation.",
        "install": "Install",
        "installAll": "Install All",
        "installRepo": "Install Repo",
        "ipAdapters": "IP Adapters",
        "load": "Load",
        "localOnly": "local only",
        "manual": "Manual",
        "loraModels": "LoRAs",
        "main": "Main",
        "metadata": "Metadata",
        "model": "Model",
        "modelConversionFailed": "Model Conversion Failed",
        "modelConverted": "Model Converted",
        "modelDeleted": "Model Deleted",
        "modelDeleteFailed": "Failed to delete model",
        "modelImageDeleted": "Model Image Deleted",
        "modelImageDeleteFailed": "Model Image Delete Failed",
        "modelImageUpdated": "Model Image Updated",
        "modelImageUpdateFailed": "Model Image Update Failed",
        "modelManager": "Model Manager",
        "modelName": "Model Name",
        "modelSettings": "Model Settings",
        "modelsSynced": "Models Synced",
        "modelSyncFailed": "Model Sync Failed",
        "modelType": "Model Type",
        "modelUpdated": "Model Updated",
        "modelUpdateFailed": "Model Update Failed",
        "name": "Name",
        "noModelsInstalled": "No Models Installed",
        "noModelsInstalledDesc1": "Install models with the",
        "noModelSelected": "No Model Selected",
        "noMatchingModels": "No matching Models",
        "none": "none",
        "path": "Path",
        "pathToConfig": "Path To Config",
        "predictionType": "Prediction Type",
        "prune": "Prune",
        "pruneTooltip": "Prune finished imports from queue",
        "repo_id": "Repo ID",
        "repoVariant": "Repo Variant",
        "scanFolder": "Scan Folder",
        "scanFolderHelper": "The folder will be recursively scanned for models. This can take a few moments for very large folders.",
        "scanPlaceholder": "Path to a local folder",
        "scanResults": "Scan Results",
        "search": "Search",
        "selected": "Selected",
        "selectModel": "Select Model",
        "settings": "Settings",
        "simpleModelPlaceholder": "URL or path to a local file or diffusers folder",
        "source": "Source",
        "starterModels": "Starter Models",
        "syncModels": "Sync Models",
        "textualInversions": "Textual Inversions",
        "triggerPhrases": "Trigger Phrases",
        "loraTriggerPhrases": "LoRA Trigger Phrases",
        "mainModelTriggerPhrases": "Main Model Trigger Phrases",
        "typePhraseHere": "Type phrase here",
        "upcastAttention": "Upcast Attention",
        "uploadImage": "Upload Image",
        "urlOrLocalPath": "URL or Local Path",
        "urlOrLocalPathHelper": "URLs should point to a single file. Local paths can point to a single file or folder for a single diffusers model.",
        "useDefaultSettings": "Use Default Settings",
        "v2_768": "v2 (768px)",
        "v2_base": "v2 (512px)",
        "vae": "VAE",
        "vaePrecision": "VAE Precision",
        "variant": "Variant",
        "width": "Width"
    },
    "models": {
        "addLora": "Add LoRA",
        "concepts": "Concepts",
        "esrganModel": "ESRGAN Model",
        "loading": "loading",
        "noMatchingLoRAs": "No matching LoRAs",
        "noMatchingModels": "No matching Models",
        "noModelsAvailable": "No models available",
        "lora": "LoRA",
        "selectModel": "Select a Model",
        "noLoRAsInstalled": "No LoRAs installed",
        "noRefinerModelsInstalled": "No SDXL Refiner models installed",
        "defaultVAE": "Default VAE"
    },
    "nodes": {
        "addNode": "Add Node",
        "addNodeToolTip": "Add Node (Shift+A, Space)",
        "addLinearView": "Add to Linear View",
        "animatedEdges": "Animated Edges",
        "animatedEdgesHelp": "Animate selected edges and edges connected to selected nodes",
        "boolean": "Booleans",
        "cannotConnectInputToInput": "Cannot connect input to input",
        "cannotConnectOutputToOutput": "Cannot connect output to output",
        "cannotConnectToSelf": "Cannot connect to self",
        "cannotDuplicateConnection": "Cannot create duplicate connections",
        "cannotMixAndMatchCollectionItemTypes": "Cannot mix and match collection item types",
        "missingNode": "Missing invocation node",
        "missingInvocationTemplate": "Missing invocation template",
        "missingFieldTemplate": "Missing field template",
        "nodePack": "Node pack",
        "collection": "Collection",
        "singleFieldType": "{{name}} (Single)",
        "collectionFieldType": "{{name}} (Collection)",
        "collectionOrScalarFieldType": "{{name}} (Single or Collection)",
        "colorCodeEdges": "Color-Code Edges",
        "colorCodeEdgesHelp": "Color-code edges according to their connected fields",
        "connectionWouldCreateCycle": "Connection would create a cycle",
        "currentImage": "Current Image",
        "currentImageDescription": "Displays the current image in the Node Editor",
        "downloadWorkflow": "Download Workflow JSON",
        "edge": "Edge",
        "edit": "Edit",
        "editMode": "Edit in Workflow Editor",
        "enum": "Enum",
        "executionStateCompleted": "Completed",
        "executionStateError": "Error",
        "executionStateInProgress": "In Progress",
        "fieldTypesMustMatch": "Field types must match",
        "fitViewportNodes": "Fit View",
        "float": "Float",
        "fullyContainNodes": "Fully Contain Nodes to Select",
        "fullyContainNodesHelp": "Nodes must be fully inside the selection box to be selected",
        "showEdgeLabels": "Show Edge Labels",
        "showEdgeLabelsHelp": "Show labels on edges, indicating the connected nodes",
        "hideLegendNodes": "Hide Field Type Legend",
        "hideMinimapnodes": "Hide MiniMap",
        "inputMayOnlyHaveOneConnection": "Input may only have one connection",
        "integer": "Integer",
        "ipAdapter": "IP-Adapter",
        "loadingNodes": "Loading Nodes...",
        "loadWorkflow": "Load Workflow",
        "noWorkflow": "No Workflow",
        "mismatchedVersion": "Invalid node: node {{node}} of type {{type}} has mismatched version (try updating?)",
        "missingTemplate": "Invalid node: node {{node}} of type {{type}} missing template (not installed?)",
        "sourceNodeDoesNotExist": "Invalid edge: source/output node {{node}} does not exist",
        "targetNodeDoesNotExist": "Invalid edge: target/input node {{node}} does not exist",
        "sourceNodeFieldDoesNotExist": "Invalid edge: source/output field {{node}}.{{field}} does not exist",
        "targetNodeFieldDoesNotExist": "Invalid edge: target/input field {{node}}.{{field}} does not exist",
        "deletedInvalidEdge": "Deleted invalid edge {{source}} -> {{target}}",
        "noConnectionData": "No connection data",
        "noConnectionInProgress": "No connection in progress",
        "node": "Node",
        "nodeOutputs": "Node Outputs",
        "nodeSearch": "Search for nodes",
        "nodeTemplate": "Node Template",
        "nodeType": "Node Type",
        "noFieldsLinearview": "No fields added to Linear View",
        "noFieldsViewMode": "This workflow has no selected fields to display. View the full workflow to configure values.",
        "noFieldType": "No field type",
        "noMatchingNodes": "No matching nodes",
        "noNodeSelected": "No node selected",
        "nodeOpacity": "Node Opacity",
        "nodeVersion": "Node Version",
        "noOutputRecorded": "No outputs recorded",
        "notes": "Notes",
        "notesDescription": "Add notes about your workflow",
        "problemSettingTitle": "Problem Setting Title",
        "resetToDefaultValue": "Reset to default value",
        "reloadNodeTemplates": "Reload Node Templates",
        "removeLinearView": "Remove from Linear View",
        "reorderLinearView": "Reorder Linear View",
        "newWorkflow": "New Workflow",
        "newWorkflowDesc": "Create a new workflow?",
        "newWorkflowDesc2": "Your current workflow has unsaved changes.",
        "clearWorkflow": "Clear Workflow",
        "clearWorkflowDesc": "Clear this workflow and start a new one?",
        "clearWorkflowDesc2": "Your current workflow has unsaved changes.",
        "scheduler": "Scheduler",
        "showLegendNodes": "Show Field Type Legend",
        "showMinimapnodes": "Show MiniMap",
        "snapToGrid": "Snap to Grid",
        "snapToGridHelp": "Snap nodes to grid when moved",
        "string": "String",
        "unableToLoadWorkflow": "Unable to Load Workflow",
        "unableToValidateWorkflow": "Unable to Validate Workflow",
        "unknownErrorValidatingWorkflow": "Unknown error validating workflow",
        "inputFieldTypeParseError": "Unable to parse type of input field {{node}}.{{field}} ({{message}})",
        "outputFieldTypeParseError": "Unable to parse type of output field {{node}}.{{field}} ({{message}})",
        "unableToExtractSchemaNameFromRef": "unable to extract schema name from ref",
        "unsupportedArrayItemType": "unsupported array item type \"{{type}}\"",
        "unsupportedAnyOfLength": "too many union members ({{count}})",
        "unsupportedMismatchedUnion": "mismatched CollectionOrScalar type with base types {{firstType}} and {{secondType}}",
        "unableToParseFieldType": "unable to parse field type",
        "unableToExtractEnumOptions": "unable to extract enum options",
        "unknownField": "Unknown field",
        "unknownFieldType": "$t(nodes.unknownField) type: {{type}}",
        "unknownNode": "Unknown Node",
        "unknownNodeType": "Unknown node type",
        "unknownTemplate": "Unknown Template",
        "unknownInput": "Unknown input: {{name}}",
        "unknownOutput": "Unknown output: {{name}}",
        "updateNode": "Update Node",
        "updateApp": "Update App",
        "updateAllNodes": "Update Nodes",
        "allNodesUpdated": "All Nodes Updated",
        "unableToUpdateNodes_one": "Unable to update {{count}} node",
        "unableToUpdateNodes_other": "Unable to update {{count}} nodes",
        "validateConnections": "Validate Connections and Graph",
        "validateConnectionsHelp": "Prevent invalid connections from being made, and invalid graphs from being invoked",
        "viewMode": "Use in Linear View",
        "unableToGetWorkflowVersion": "Unable to get workflow schema version",
        "version": "Version",
        "versionUnknown": " Version Unknown",
        "workflow": "Workflow",
        "graph": "Graph",
        "noGraph": "No Graph",
        "workflowAuthor": "Author",
        "workflowContact": "Contact",
        "workflowDescription": "Short Description",
        "workflowName": "Name",
        "workflowNotes": "Notes",
        "workflowSettings": "Workflow Editor Settings",
        "workflowTags": "Tags",
        "workflowValidation": "Workflow Validation Error",
        "workflowVersion": "Version",
        "zoomInNodes": "Zoom In",
        "zoomOutNodes": "Zoom Out",
        "betaDesc": "This invocation is in beta. Until it is stable, it may have breaking changes during app updates. We plan to support this invocation long-term.",
        "prototypeDesc": "This invocation is a prototype. It may have breaking changes during app updates and may be removed at any time.",
        "imageAccessError": "Unable to find image {{image_name}}, resetting to default",
        "boardAccessError": "Unable to find board {{board_id}}, resetting to default",
        "modelAccessError": "Unable to find model {{key}}, resetting to default"
    },
    "parameters": {
        "aspect": "Aspect",
        "lockAspectRatio": "Lock Aspect Ratio",
        "swapDimensions": "Swap Dimensions",
        "setToOptimalSize": "Optimize size for model",
        "setToOptimalSizeTooSmall": "$t(parameters.setToOptimalSize) (may be too small)",
        "setToOptimalSizeTooLarge": "$t(parameters.setToOptimalSize) (may be too large)",
        "cancel": {
            "cancel": "Cancel"
        },
        "cfgScale": "CFG Scale",
        "cfgRescaleMultiplier": "CFG Rescale Multiplier",
        "clipSkip": "CLIP Skip",
        "coherenceMode": "Mode",
        "coherenceEdgeSize": "Edge Size",
        "coherenceMinDenoise": "Min Denoise",
        "controlNetControlMode": "Control Mode",
        "copyImage": "Copy Image",
        "denoisingStrength": "Denoising Strength",
        "downloadImage": "Download Image",
        "general": "General",
        "globalSettings": "Global Settings",
        "height": "Height",
        "imageFit": "Fit Initial Image To Output Size",
        "images": "Images",
        "infillMethod": "Infill Method",
        "infillMosaicTileWidth": "Tile Width",
        "infillMosaicTileHeight": "Tile Height",
        "infillMosaicMinColor": "Min Color",
        "infillMosaicMaxColor": "Max Color",
        "infillColorValue": "Fill Color",
        "info": "Info",
        "invoke": {
            "addingImagesTo": "Adding images to",
            "invoke": "Invoke",
            "missingFieldTemplate": "Missing field template",
            "missingInputForField": "{{nodeLabel}} -> {{fieldLabel}} missing input",
            "missingNodeTemplate": "Missing node template",
            "noControlImageForControlAdapter": "Control Adapter #{{number}} has no control image",
            "imageNotProcessedForControlAdapter": "Control Adapter #{{number}}'s image is not processed",
            "noInitialImageSelected": "No initial image selected",
            "noModelForControlAdapter": "Control Adapter #{{number}} has no model selected.",
            "incompatibleBaseModelForControlAdapter": "Control Adapter #{{number}} model is incompatible with main model.",
            "noModelSelected": "No model selected",
            "noPrompts": "No prompts generated",
            "noNodesInGraph": "No nodes in graph",
            "systemDisconnected": "System disconnected",
            "layer": {
                "initialImageNoImageSelected": "no initial image selected",
                "controlAdapterNoModelSelected": "no Control Adapter model selected",
                "controlAdapterIncompatibleBaseModel": "incompatible Control Adapter base model",
                "controlAdapterNoImageSelected": "no Control Adapter image selected",
                "controlAdapterImageNotProcessed": "Control Adapter image not processed",
                "t2iAdapterIncompatibleDimensions": "T2I Adapter requires image dimension to be multiples of {{multiple}}",
                "ipAdapterNoModelSelected": "no IP adapter selected",
                "ipAdapterIncompatibleBaseModel": "incompatible IP Adapter base model",
                "ipAdapterNoImageSelected": "no IP Adapter image selected",
                "rgNoPromptsOrIPAdapters": "no text prompts or IP Adapters",
                "rgNoRegion": "no region selected"
            }
        },
        "maskBlur": "Mask Blur",
        "negativePromptPlaceholder": "Negative Prompt",
        "globalNegativePromptPlaceholder": "Global Negative Prompt",
        "noiseThreshold": "Noise Threshold",
        "patchmatchDownScaleSize": "Downscale",
        "perlinNoise": "Perlin Noise",
        "positivePromptPlaceholder": "Positive Prompt",
        "globalPositivePromptPlaceholder": "Global Positive Prompt",
        "iterations": "Iterations",
        "scale": "Scale",
        "scaleBeforeProcessing": "Scale Before Processing",
        "scaledHeight": "Scaled H",
        "scaledWidth": "Scaled W",
        "scheduler": "Scheduler",
        "seamlessXAxis": "Seamless Tiling X Axis",
        "seamlessYAxis": "Seamless Tiling Y Axis",
        "seed": "Seed",
        "imageActions": "Image Actions",
        "sendToImg2Img": "Send to Image to Image",
        "sendToUnifiedCanvas": "Send To Unified Canvas",
        "sendToUpscale": "Send To Upscale",
        "showOptionsPanel": "Show Side Panel (O or T)",
        "shuffle": "Shuffle Seed",
        "steps": "Steps",
        "strength": "Strength",
        "symmetry": "Symmetry",
        "tileSize": "Tile Size",
        "type": "Type",
        "postProcessing": "Post-Processing (Shift + U)",
        "processImage": "Process Image",
        "upscaling": "Upscaling",
        "useAll": "Use All",
        "useSize": "Use Size",
        "useCpuNoise": "Use CPU Noise",
        "remixImage": "Remix Image",
        "usePrompt": "Use Prompt",
        "useSeed": "Use Seed",
        "width": "Width",
        "isAllowedToUpscale": {
            "useX2Model": "Image is too large to upscale with x4 model, use x2 model",
            "tooLarge": "Image is too large to upscale, select smaller image"
        }
    },
    "dynamicPrompts": {
        "showDynamicPrompts": "Show Dynamic Prompts",
        "dynamicPrompts": "Dynamic Prompts",
        "maxPrompts": "Max Prompts",
        "promptsPreview": "Prompts Preview",
        "promptsWithCount_one": "{{count}} Prompt",
        "promptsWithCount_other": "{{count}} Prompts",
        "seedBehaviour": {
            "label": "Seed Behaviour",
            "perIterationLabel": "Seed per Iteration",
            "perIterationDesc": "Use a different seed for each iteration",
            "perPromptLabel": "Seed per Image",
            "perPromptDesc": "Use a different seed for each image"
        },
        "loading": "Generating Dynamic Prompts..."
    },
    "sdxl": {
        "cfgScale": "CFG Scale",
        "concatPromptStyle": "Linking Prompt & Style",
        "freePromptStyle": "Manual Style Prompting",
        "denoisingStrength": "Denoising Strength",
        "loading": "Loading...",
        "negAestheticScore": "Negative Aesthetic Score",
        "negStylePrompt": "Negative Style Prompt",
        "noModelsAvailable": "No models available",
        "posAestheticScore": "Positive Aesthetic Score",
        "posStylePrompt": "Positive Style Prompt",
        "refiner": "Refiner",
        "refinermodel": "Refiner Model",
        "refinerStart": "Refiner Start",
        "refinerSteps": "Refiner Steps",
        "scheduler": "Scheduler",
        "steps": "Steps"
    },
    "settings": {
        "antialiasProgressImages": "Antialias Progress Images",
        "beta": "Beta",
        "confirmOnDelete": "Confirm On Delete",
        "developer": "Developer",
        "displayInProgress": "Display Progress Images",
        "enableImageDebugging": "Enable Image Debugging",
        "enableInformationalPopovers": "Enable Informational Popovers",
        "informationalPopoversDisabled": "Informational Popovers Disabled",
        "informationalPopoversDisabledDesc": "Informational popovers have been disabled. Enable them in Settings.",
        "enableInvisibleWatermark": "Enable Invisible Watermark",
        "enableNSFWChecker": "Enable NSFW Checker",
        "general": "General",
        "generation": "Generation",
        "models": "Models",
        "resetComplete": "Web UI has been reset.",
        "resetWebUI": "Reset Web UI",
        "resetWebUIDesc1": "Resetting the web UI only resets the browser's local cache of your images and remembered settings. It does not delete any images from disk.",
        "resetWebUIDesc2": "If images aren't showing up in the gallery or something else isn't working, please try resetting before submitting an issue on GitHub.",
        "shouldLogToConsole": "Console Logging",
        "showProgressInViewer": "Show Progress Images in Viewer",
        "ui": "User Interface",
        "clearIntermediatesDisabled": "Queue must be empty to clear intermediates",
        "clearIntermediatesDesc1": "Clearing intermediates will reset your Canvas and ControlNet state.",
        "clearIntermediatesDesc2": "Intermediate images are byproducts of generation, different from the result images in the gallery. Clearing intermediates will free disk space.",
        "clearIntermediatesDesc3": "Your gallery images will not be deleted.",
        "clearIntermediates": "Clear Intermediates",
        "clearIntermediatesWithCount_one": "Clear {{count}} Intermediate",
        "clearIntermediatesWithCount_other": "Clear {{count}} Intermediates",
        "intermediatesCleared_one": "Cleared {{count}} Intermediate",
        "intermediatesCleared_other": "Cleared {{count}} Intermediates",
        "intermediatesClearedFailed": "Problem Clearing Intermediates",
        "reloadingIn": "Reloading in"
    },
    "toast": {
        "addedToBoard": "Added to board",
        "baseModelChanged": "Base Model Changed",
        "baseModelChangedCleared_one": "Cleared or disabled {{count}} incompatible submodel",
        "baseModelChangedCleared_other": "Cleared or disabled {{count}} incompatible submodels",
        "canceled": "Processing Canceled",
        "canvasCopiedClipboard": "Canvas Copied to Clipboard",
        "canvasDownloaded": "Canvas Downloaded",
        "canvasMerged": "Canvas Merged",
        "canvasSavedGallery": "Canvas Saved to Gallery",
        "canvasSentControlnetAssets": "Canvas Sent to ControlNet & Assets",
        "connected": "Connected to Server",
        "imageCopied": "Image Copied",
        "imageNotLoadedDesc": "Could not find image",
        "imageSaved": "Image Saved",
        "imageSavingFailed": "Image Saving Failed",
        "imageUploaded": "Image Uploaded",
        "imageUploadFailed": "Image Upload Failed",
        "invalidUpload": "Invalid Upload",
        "loadedWithWarnings": "Workflow Loaded with Warnings",
        "maskSavedAssets": "Mask Saved to Assets",
        "maskSentControlnetAssets": "Mask Sent to ControlNet & Assets",
        "metadataLoadFailed": "Failed to load metadata",
        "modelAddedSimple": "Model Added to Queue",
        "modelImportCanceled": "Model Import Canceled",
        "outOfMemoryError": "Out of Memory Error",
        "outOfMemoryErrorDesc": "Your current generation settings exceed system capacity. Please adjust your settings and try again.",
        "parameters": "Parameters",
        "parameterSet": "Parameter Recalled",
        "parameterSetDesc": "Recalled {{parameter}}",
        "parameterNotSet": "Parameter Not Recalled",
        "parameterNotSetDesc": "Unable to recall {{parameter}}",
        "parameterNotSetDescWithMessage": "Unable to recall {{parameter}}: {{message}}",
        "parametersSet": "Parameters Recalled",
        "parametersNotSet": "Parameters Not Recalled",
        "errorCopied": "Error Copied",
        "problemCopyingCanvas": "Problem Copying Canvas",
        "problemCopyingCanvasDesc": "Unable to export base layer",
        "problemCopyingImage": "Unable to Copy Image",
        "problemDownloadingImage": "Unable to Download Image",
        "problemDownloadingCanvas": "Problem Downloading Canvas",
        "problemDownloadingCanvasDesc": "Unable to export base layer",
        "problemImportingMask": "Problem Importing Mask",
        "problemImportingMaskDesc": "Unable to export mask",
        "problemMergingCanvas": "Problem Merging Canvas",
        "problemMergingCanvasDesc": "Unable to export base layer",
        "problemSavingCanvas": "Problem Saving Canvas",
        "problemSavingCanvasDesc": "Unable to export base layer",
        "problemSavingMask": "Problem Saving Mask",
        "problemSavingMaskDesc": "Unable to export mask",
        "prunedQueue": "Pruned Queue",
        "resetInitialImage": "Reset Initial Image",
        "sentToImageToImage": "Sent To Image To Image",
        "sentToUnifiedCanvas": "Sent to Unified Canvas",
        "serverError": "Server Error",
        "sessionRef": "Session: {{sessionId}}",
        "setAsCanvasInitialImage": "Set as canvas initial image",
        "setCanvasInitialImage": "Set canvas initial image",
        "setControlImage": "Set as control image",
        "setInitialImage": "Set as initial image",
        "setNodeField": "Set as node field",
        "somethingWentWrong": "Something Went Wrong",
        "uploadFailed": "Upload failed",
        "uploadFailedInvalidUploadDesc": "Must be single PNG or JPEG image",
        "uploadInitialImage": "Upload Initial Image",
        "workflowLoaded": "Workflow Loaded",
        "problemRetrievingWorkflow": "Problem Retrieving Workflow",
        "workflowDeleted": "Workflow Deleted",
        "problemDeletingWorkflow": "Problem Deleting Workflow"
    },
    "tooltip": {
        "feature": {
            "boundingBox": "The bounding box is the same as the Width and Height settings for Text to Image or Image to Image. Only the area in the box will be processed.",
            "gallery": "Gallery displays generations from the outputs folder as they're created. Settings are stored within files and accesed by context menu.",
            "other": "These options will enable alternative processing modes for Invoke. 'Seamless tiling' will create repeating patterns in the output. 'High resolution' is generation in two steps with img2img: use this setting when you want a larger and more coherent image without artifacts. It will take longer than usual txt2img.",
            "prompt": "This is the prompt field. Prompt includes generation objects and stylistic terms. You can add weight (token importance) in the prompt as well, but CLI commands and parameters will not work.",
            "seed": "Seed value affects the initial noise from which the image is formed. You can use the already existing seeds from previous images. 'Noise Threshold' is used to mitigate artifacts at high CFG values (try the 0-10 range), and Perlin to add Perlin noise during generation: both serve to add variation to your outputs.",
            "upscale": "Use ESRGAN to enlarge the image immediately after generation."
        }
    },
    "popovers": {
        "clipSkip": {
            "heading": "CLIP Skip",
            "paragraphs": [
                "How many layers of the CLIP model to skip.",
                "Certain models are better suited to be used with CLIP Skip."
            ]
        },
        "paramNegativeConditioning": {
            "heading": "Negative Prompt",
            "paragraphs": [
                "The generation process avoids the concepts in the negative prompt. Use this to exclude qualities or objects from the output.",
                "Supports Compel syntax and embeddings."
            ]
        },
        "paramPositiveConditioning": {
            "heading": "Positive Prompt",
            "paragraphs": [
                "Guides the generation process. You may use any words or phrases.",
                "Compel and Dynamic Prompts syntaxes and embeddings."
            ]
        },
        "paramScheduler": {
            "heading": "Scheduler",
            "paragraphs": [
                "Scheduler used during the generation process.",
                "Each scheduler defines how to iteratively add noise to an image or how to update a sample based on a model's output."
            ]
        },
        "compositingMaskBlur": {
            "heading": "Mask Blur",
            "paragraphs": ["The blur radius of the mask."]
        },
        "compositingBlurMethod": {
            "heading": "Blur Method",
            "paragraphs": ["The method of blur applied to the masked area."]
        },
        "compositingCoherencePass": {
            "heading": "Coherence Pass",
            "paragraphs": ["A second round of denoising helps to composite the Inpainted/Outpainted image."]
        },
        "compositingCoherenceMode": {
            "heading": "Mode",
            "paragraphs": ["Method used to create a coherent image with the newly generated masked area."]
        },
        "compositingCoherenceEdgeSize": {
            "heading": "Edge Size",
            "paragraphs": ["The edge size of the coherence pass."]
        },
        "compositingCoherenceMinDenoise": {
            "heading": "Minimum Denoise",
            "paragraphs": [
                "Minimum denoise strength for the Coherence mode",
                "The minimum denoise strength for the coherence region when inpainting or outpainting"
            ]
        },
        "compositingMaskAdjustments": {
            "heading": "Mask Adjustments",
            "paragraphs": ["Adjust the mask."]
        },
        "controlNet": {
            "heading": "ControlNet",
            "paragraphs": [
                "ControlNets provide guidance to the generation process, helping create images with controlled composition, structure, or style, depending on the model selected."
            ]
        },
        "controlNetBeginEnd": {
            "heading": "Begin / End Step Percentage",
            "paragraphs": [
                "The part of the of the denoising process that will have the Control Adapter applied.",
                "Generally, Control Adapters applied at the start of the process guide composition, and Control Adapters applied at the end guide details."
            ]
        },
        "controlNetControlMode": {
            "heading": "Control Mode",
            "paragraphs": ["Lend more weight to either the prompt or ControlNet."]
        },
        "controlNetProcessor": {
            "heading": "Processor",
            "paragraphs": [
                "Method of processing the input image to guide the generation process. Different processors will providedifferent effects or styles in your generated images."
            ]
        },
        "controlNetResizeMode": {
            "heading": "Resize Mode",
            "paragraphs": ["Method to fit Control Adapter's input image size to the output generation size."]
        },
        "ipAdapterMethod": {
            "heading": "Method",
            "paragraphs": ["Method by which to apply the current IP Adapter."]
        },
        "controlNetWeight": {
            "heading": "Weight",
            "paragraphs": [
                "Weight of the Control Adapter. Higher weight will lead to larger impacts on the final image."
            ]
        },
        "dynamicPrompts": {
            "heading": "Dynamic Prompts",
            "paragraphs": [
                "Dynamic Prompts parses a single prompt into many.",
                "The basic syntax is \"a {red|green|blue} ball\". This will produce three prompts: \"a red ball\", \"a green ball\" and \"a blue ball\".",
                "You can use the syntax as many times as you like in a single prompt, but be sure to keep the number of prompts generated in check with the Max Prompts setting."
            ]
        },
        "dynamicPromptsMaxPrompts": {
            "heading": "Max Prompts",
            "paragraphs": ["Limits the number of prompts that can be generated by Dynamic Prompts."]
        },
        "dynamicPromptsSeedBehaviour": {
            "heading": "Seed Behaviour",
            "paragraphs": [
                "Controls how the seed is used when generating prompts.",
                "Per Iteration will use a unique seed for each iteration. Use this to explore prompt variations on a single seed.",
                "For example, if you have 5 prompts, each image will use the same seed.",
                "Per Image will use a unique seed for each image. This provides more variation."
            ]
        },
        "imageFit": {
            "heading": "Fit Initial Image to Output Size",
            "paragraphs": [
                "Resizes the initial image to the width and height of the output image. Recommended to enable."
            ]
        },
        "infillMethod": {
            "heading": "Infill Method",
            "paragraphs": ["Method of infilling during the Outpainting or Inpainting process."]
        },
        "lora": {
            "heading": "LoRA",
            "paragraphs": ["Lightweight models that are used in conjunction with base models."]
        },
        "loraWeight": {
            "heading": "Weight",
            "paragraphs": ["Weight of the LoRA. Higher weight will lead to larger impacts on the final image."]
        },
        "noiseUseCPU": {
            "heading": "Use CPU Noise",
            "paragraphs": [
                "Controls whether noise is generated on the CPU or GPU.",
                "With CPU Noise enabled, a particular seed will produce the same image on any machine.",
                "There is no performance impact to enabling CPU Noise."
            ]
        },
        "paramAspect": {
            "heading": "Aspect",
            "paragraphs": [
                "Aspect ratio of the generated image. Changing the ratio will update the Width and Height accordingly.",
                "\"Optimize\" will set the Width and Height to optimal dimensions for the chosen model."
            ]
        },
        "paramCFGScale": {
            "heading": "CFG Scale",
            "paragraphs": [
                "Controls how much the prompt influences the generation process.",
                "High CFG Scale values can result in over-saturation and distorted generation results. "
            ]
        },
        "paramCFGRescaleMultiplier": {
            "heading": "CFG Rescale Multiplier",
            "paragraphs": [
                "Rescale multiplier for CFG guidance, used for models trained using zero-terminal SNR (ztsnr).",
                "Suggested value of 0.7 for these models."
            ]
        },
        "paramDenoisingStrength": {
            "heading": "Denoising Strength",
            "paragraphs": [
                "How much noise is added to the input image.",
                "0 will result in an identical image, while 1 will result in a completely new image."
            ]
        },
        "paramHeight": {
            "heading": "Height",
            "paragraphs": ["Height of the generated image. Must be a multiple of 8."]
        },
        "paramHrf": {
            "heading": "Enable High Resolution Fix",
            "paragraphs": [
                "Generate high quality images at a larger resolution than optimal for the model. Generally used to prevent duplication in the generated image."
            ]
        },
        "paramIterations": {
            "heading": "Iterations",
            "paragraphs": [
                "The number of images to generate.",
                "If Dynamic Prompts is enabled, each of the prompts will be generated this many times."
            ]
        },
        "paramModel": {
            "heading": "Model",
            "paragraphs": [
                "Model used for generation. Different models are trained to specialize in producing different aesthetic results and content."
            ]
        },
        "paramRatio": {
            "heading": "Aspect Ratio",
            "paragraphs": [
                "The aspect ratio of the dimensions of the image generated.",
                "An image size (in number of pixels) equivalent to 512x512 is recommended for SD1.5 models and a size equivalent to 1024x1024 is recommended for SDXL models."
            ]
        },
        "paramSeed": {
            "heading": "Seed",
            "paragraphs": [
                "Controls the starting noise used for generation.",
                "Disable the \"Random\" option to produce identical results with the same generation settings."
            ]
        },
        "paramSteps": {
            "heading": "Steps",
            "paragraphs": [
                "Number of steps that will be performed in each generation.",
                "Higher step counts will typically create better images but will require more generation time."
            ]
        },
        "paramUpscaleMethod": {
            "heading": "Upscale Method",
            "paragraphs": ["Method used to upscale the image for High Resolution Fix."]
        },
        "paramVAE": {
            "heading": "VAE",
            "paragraphs": ["Model used for translating AI output into the final image."]
        },
        "paramVAEPrecision": {
            "heading": "VAE Precision",
            "paragraphs": [
                "The precision used during VAE encoding and decoding.",
                "Fp16/Half precision is more efficient, at the expense of minor image variations."
            ]
        },
        "paramWidth": {
            "heading": "Width",
            "paragraphs": ["Width of the generated image. Must be a multiple of 8."]
        },
        "patchmatchDownScaleSize": {
            "heading": "Downscale",
            "paragraphs": [
                "How much downscaling occurs before infilling.",
                "Higher downscaling will improve performance and reduce quality."
            ]
        },
        "refinerModel": {
            "heading": "Refiner Model",
            "paragraphs": [
                "Model used during the refiner portion of the generation process.",
                "Similar to the Generation Model."
            ]
        },
        "refinerPositiveAestheticScore": {
            "heading": "Positive Aesthetic Score",
            "paragraphs": [
                "Weight generations to be more similar to images with a high aesthetic score, based on the training data."
            ]
        },
        "refinerNegativeAestheticScore": {
            "heading": "Negative Aesthetic Score",
            "paragraphs": [
                "Weight generations to be more similar to images with a low aesthetic score, based on the training data."
            ]
        },
        "refinerScheduler": {
            "heading": "Scheduler",
            "paragraphs": [
                "Scheduler used during the refiner portion of the generation process.",
                "Similar to the Generation Scheduler."
            ]
        },
        "refinerStart": {
            "heading": "Refiner Start",
            "paragraphs": [
                "Where in the generation process the refiner will start to be used.",
                "0 means the refiner will be used for the entire generation process, 0.8 means the refiner will be used for the last 20% of the generation process."
            ]
        },
        "refinerSteps": {
            "heading": "Steps",
            "paragraphs": [
                "Number of steps that will be performed during the refiner portion of the generation process.",
                "Similar to the Generation Steps."
            ]
        },
        "refinerCfgScale": {
            "heading": "CFG Scale",
            "paragraphs": [
                "Controls how much the prompt influences the generation process.",
                "Similar to the Generation CFG Scale."
            ]
        },
        "scaleBeforeProcessing": {
            "heading": "Scale Before Processing",
            "paragraphs": [
                "\"Auto\" scales the selected area to the size best suited for the model before the image generation process.",
                "\"Manual\" allows you to choose the width and height the selected area will be scaled to before the image generation process."
            ]
        },
        "seamlessTilingXAxis": {
            "heading": "Seamless Tiling X Axis",
            "paragraphs": ["Seamlessly tile an image along the horizontal axis."]
        },
        "seamlessTilingYAxis": {
            "heading": "Seamless Tiling Y Axis",
            "paragraphs": ["Seamlessly tile an image along the vertical axis."]
        },
        "upscaleModel": {
            "heading": "Upscale Model",
            "paragraphs": [
                "The upscale model scales the image to the output size before details are added. Any supported upscale model may be used, but some are specialized for different kinds of images, like photos or line drawings."
            ]
        },
        "scale": {
            "heading": "Scale",
            "paragraphs": [
                "Scale controls the output image size, and is based on a multiple of the input image resolution. For example a 2x upscale on a 1024x1024 image would produce a 2048 x 2048 output."
            ]
        },
        "creativity": {
            "heading": "Creativity",
            "paragraphs": [
                "Creativity controls the amount of freedom granted to the model when adding details. Low creativity stays close to the original image, while high creativity allows for more change. When using a prompt, high creativity increases the influence of the prompt."
            ]
        },
        "structure": {
            "heading": "Structure",
            "paragraphs": [
                "Structure controls how closely the output image will keep to the layout of the original. Low structure allows major changes, while high structure strictly maintains the original composition and layout."
            ]
        }
    },
    "unifiedCanvas": {
        "accept": "Accept",
        "activeLayer": "Active Layer",
        "antialiasing": "Antialiasing",
        "autoSaveToGallery": "Auto Save to Gallery",
        "base": "Base",
        "boundingBox": "Bounding Box",
        "boundingBoxPosition": "Bounding Box Position",
        "brush": "Brush",
        "brushOptions": "Brush Options",
        "brushSize": "Size",
        "canvasDimensions": "Canvas Dimensions",
        "canvasPosition": "Canvas Position",
        "canvasScale": "Canvas Scale",
        "canvasSettings": "Canvas Settings",
        "clearCanvas": "Clear Canvas",
        "clearCanvasHistory": "Clear Canvas History",
        "clearCanvasHistoryConfirm": "Are you sure you want to clear the canvas history?",
        "clearCanvasHistoryMessage": "Clearing the canvas history leaves your current canvas intact, but irreversibly clears the undo and redo history.",
        "clearHistory": "Clear History",
        "clearMask": "Clear Mask (Shift+C)",
        "coherenceModeGaussianBlur": "Gaussian Blur",
        "coherenceModeBoxBlur": "Box Blur",
        "coherenceModeStaged": "Staged",
        "colorPicker": "Color Picker",
        "copyToClipboard": "Copy to Clipboard",
        "cursorPosition": "Cursor Position",
        "darkenOutsideSelection": "Darken Outside Selection",
        "discardAll": "Discard All",
        "discardCurrent": "Discard Current",
        "downloadAsImage": "Download As Image",
        "enableMask": "Enable Mask",
        "eraseBoundingBox": "Erase Bounding Box",
        "eraser": "Eraser",
        "fillBoundingBox": "Fill Bounding Box",
        "hideBoundingBox": "Hide Bounding Box",
        "initialFitImageSize": "Fit Image Size on Drop",
        "invertBrushSizeScrollDirection": "Invert Scroll for Brush Size",
        "layer": "Layer",
        "limitStrokesToBox": "Limit Strokes to Box",
        "mask": "Mask",
        "maskingOptions": "Masking Options",
        "mergeVisible": "Merge Visible",
        "move": "Move",
        "next": "Next",
        "preserveMaskedArea": "Preserve Masked Area",
        "previous": "Previous",
        "redo": "Redo",
        "resetView": "Reset View",
        "saveBoxRegionOnly": "Save Box Region Only",
        "saveMask": "Save $t(unifiedCanvas.mask)",
        "saveToGallery": "Save To Gallery",
        "scaledBoundingBox": "Scaled Bounding Box",
        "showBoundingBox": "Show Bounding Box",
        "showCanvasDebugInfo": "Show Additional Canvas Info",
        "showGrid": "Show Grid",
        "showResultsOn": "Show Results (On)",
        "showResultsOff": "Show Results (Off)",
        "showIntermediates": "Show Intermediates",
        "snapToGrid": "Snap to Grid",
        "undo": "Undo"
    },
    "workflows": {
        "ascending": "Ascending",
        "created": "Created",
        "descending": "Descending",
        "workflows": "Workflows",
        "workflowLibrary": "Library",
        "userWorkflows": "My Workflows",
        "defaultWorkflows": "Default Workflows",
        "projectWorkflows": "Project Workflows",
        "opened": "Opened",
        "openWorkflow": "Open Workflow",
        "updated": "Updated",
        "uploadWorkflow": "Load from File",
        "deleteWorkflow": "Delete Workflow",
        "unnamedWorkflow": "Unnamed Workflow",
        "downloadWorkflow": "Save to File",
        "saveWorkflow": "Save Workflow",
        "saveWorkflowAs": "Save Workflow As",
        "saveWorkflowToProject": "Save Workflow to Project",
        "savingWorkflow": "Saving Workflow...",
        "problemSavingWorkflow": "Problem Saving Workflow",
        "workflowSaved": "Workflow Saved",
        "name": "Name",
        "noRecentWorkflows": "No Recent Workflows",
        "noUserWorkflows": "No User Workflows",
        "noWorkflows": "No Workflows",
        "problemLoading": "Problem Loading Workflows",
        "loading": "Loading Workflows",
        "noDescription": "No description",
        "searchWorkflows": "Search Workflows",
        "clearWorkflowSearchFilter": "Clear Workflow Search Filter",
        "workflowName": "Workflow Name",
        "newWorkflowCreated": "New Workflow Created",
        "workflowCleared": "Workflow Cleared",
        "workflowEditorMenu": "Workflow Editor Menu",
        "loadFromGraph": "Load Workflow from Graph",
        "convertGraph": "Convert Graph",
        "loadWorkflow": "$t(common.load) Workflow",
        "autoLayout": "Auto Layout"
    },
    "app": {
        "storeNotInitialized": "Store is not initialized"
    },
    "controlLayers": {
        "deleteAll": "Delete All",
        "addLayer": "Add Layer",
        "moveToFront": "Move to Front",
        "moveToBack": "Move to Back",
        "moveForward": "Move Forward",
        "moveBackward": "Move Backward",
        "brushSize": "Brush Size",
        "controlLayers": "Control Layers",
        "globalMaskOpacity": "Global Mask Opacity",
        "autoNegative": "Auto Negative",
        "deletePrompt": "Delete Prompt",
        "resetRegion": "Reset Region",
        "debugLayers": "Debug Layers",
        "rectangle": "Rectangle",
        "maskPreviewColor": "Mask Preview Color",
        "addPositivePrompt": "Add $t(common.positivePrompt)",
        "addNegativePrompt": "Add $t(common.negativePrompt)",
        "addIPAdapter": "Add $t(common.ipAdapter)",
        "regionalGuidance": "Regional Guidance",
        "regionalGuidanceLayer": "$t(controlLayers.regionalGuidance) $t(unifiedCanvas.layer)",
        "opacity": "Opacity",
        "globalControlAdapter": "Global $t(controlnet.controlAdapter_one)",
        "globalControlAdapterLayer": "Global $t(controlnet.controlAdapter_one) $t(unifiedCanvas.layer)",
        "globalIPAdapter": "Global $t(common.ipAdapter)",
        "globalIPAdapterLayer": "Global $t(common.ipAdapter) $t(unifiedCanvas.layer)",
        "globalInitialImage": "Global Initial Image",
        "globalInitialImageLayer": "$t(controlLayers.globalInitialImage) $t(unifiedCanvas.layer)",
        "opacityFilter": "Opacity Filter",
        "clearProcessor": "Clear Processor",
        "resetProcessor": "Reset Processor to Defaults",
        "noLayersAdded": "No Layers Added",
        "layers_one": "Layer",
        "layers_other": "Layers"
    },
    "upscaling": {
        "creativity": "Creativity",
        "structure": "Structure",
        "upscaleModel": "Upscale Model",
        "postProcessingModel": "Post-Processing Model",
        "scale": "Scale",
        "postProcessingMissingModelWarning": "Visit the <LinkComponent>Model Manager</LinkComponent> to install a post-processing (image to image) model.",
        "missingModelsWarning": "Visit the <LinkComponent>Model Manager</LinkComponent> to install the required models:",
        "mainModelDesc": "Main model (SD1.5 or SDXL architecture)",
        "tileControlNetModelDesc": "Tile ControlNet model for the chosen main model architecture",
        "upscaleModelDesc": "Upscale (image to image) model",
        "missingUpscaleInitialImage": "Missing initial image for upscaling",
        "missingUpscaleModel": "Missing upscale model",
        "missingTileControlNetModel": "No valid tile ControlNet models installed"
    },
    "upsell": {
        "inviteTeammates": "Invite Teammates",
        "professional": "Professional",
        "professionalUpsell": "Available in Invoke’s Professional Edition. Click here or visit invoke.com/pricing for more details.",
        "shareAccess": "Share Access"
    },
    "ui": {
        "tabs": {
            "generation": "Generation",
            "generationTab": "$t(ui.tabs.generation) $t(common.tab)",
            "canvas": "Canvas",
            "canvasTab": "$t(ui.tabs.canvas) $t(common.tab)",
            "workflows": "Workflows",
            "workflowsTab": "$t(ui.tabs.workflows) $t(common.tab)",
            "models": "Models",
            "modelsTab": "$t(ui.tabs.models) $t(common.tab)",
            "queue": "Queue",
            "queueTab": "$t(ui.tabs.queue) $t(common.tab)",
            "upscaling": "Upscaling",
            "upscalingTab": "$t(ui.tabs.upscaling) $t(common.tab)"
        }
    }
}
